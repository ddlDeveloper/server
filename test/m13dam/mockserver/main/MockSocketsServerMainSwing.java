/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package m13dam.mockserver.main;

import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import m13dam.mockserver.sockets.MockSocketsServer;

/**
 *
 * @author professor
 */
public class MockSocketsServerMainSwing extends javax.swing.JFrame {

    // Handwritten variables
    JFileChooser fileChooser;
    
    File responseFile, logFile;
    
    MockSocketsServer server=new MockSocketsServer();
    
    File currentDirectory=null;
    private final String BAD_FILE="Bad file!!";
    private final String STATUS_STOPPED="Stopped";
    private final String STATUS_RUNNING="Running";
    private final String MISSING_DATA="Missing data";
    private final String SERVER_ALREADY_RUNNING="Server already running";
    private final String SERVER_ALREADY_STOPPED="Server already stopped";
    private final String BAD_PORT_NUMBER="Bad port number";
    private final String INPUT_OUTPUT_ERROR="Input output error";
    private final String ERROR_MESSAGE_TITLE = "Error!!";
    
    private final Color COLOR_STOPPED=Color.RED;
    private final Color COLOR_RUNNING=Color.GREEN;

    
    /**
     * Creates new form MockSocketsServerMainSwing
     */
    public MockSocketsServerMainSwing() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLblMainTitle = new javax.swing.JLabel();
        jLblScheduledResponsesFile = new javax.swing.JLabel();
        jLblLogFile = new javax.swing.JLabel();
        jBtnStart = new javax.swing.JButton();
        jBtnStop = new javax.swing.JButton();
        jLblStatus = new javax.swing.JLabel();
        jLblStatusInfo = new javax.swing.JLabel();
        jTxtResponsesFile = new javax.swing.JTextField();
        jTxtLogFile = new javax.swing.JTextField();
        jBtnResponseFileChoser = new javax.swing.JButton();
        jBtnLogFileChoser = new javax.swing.JButton();
        jLblPortNumber = new javax.swing.JLabel();
        jTxtPortNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLblMainTitle.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLblMainTitle.setText("Mock Server");

        jLblScheduledResponsesFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLblScheduledResponsesFile.setLabelFor(jTxtResponsesFile);
        jLblScheduledResponsesFile.setText("Scheduled responses file:");

        jLblLogFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLblLogFile.setLabelFor(jTxtLogFile);
        jLblLogFile.setText("Log file:");

        jBtnStart.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnStart.setText("Start Server");
        jBtnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStartActionPerformed(evt);
            }
        });

        jBtnStop.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnStop.setText("Stop Server");
        jBtnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStopActionPerformed(evt);
            }
        });

        jLblStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLblStatus.setText("Status:");

        jLblStatusInfo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblStatusInfo.setForeground(new java.awt.Color(255, 51, 51));
        jLblStatusInfo.setText("Stoppped");

        jTxtResponsesFile.setEditable(false);
        jTxtResponsesFile.setBackground(new java.awt.Color(255, 255, 204));

        jTxtLogFile.setEditable(false);
        jTxtLogFile.setBackground(new java.awt.Color(255, 255, 204));

        jBtnResponseFileChoser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnResponseFileChoser.setText("...");
        jBtnResponseFileChoser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnResponseFileChoserActionPerformed(evt);
            }
        });

        jBtnLogFileChoser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnLogFileChoser.setText("...");
        jBtnLogFileChoser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLogFileChoserActionPerformed(evt);
            }
        });

        jLblPortNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLblPortNumber.setText("Port number:");

        jTxtPortNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTxtPortNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtPortNumberFocusLost(evt);
            }
        });
        jTxtPortNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtPortNumberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLblMainTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                        .addGap(69, 69, 69))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblScheduledResponsesFile)
                            .addComponent(jLblLogFile))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnLogFileChoser)
                            .addComponent(jBtnResponseFileChoser))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtLogFile)
                            .addComponent(jTxtResponsesFile)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLblPortNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTxtPortNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBtnStart)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnStop))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLblStatus)
                                .addGap(18, 18, 18)
                                .addComponent(jLblStatusInfo)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblMainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblPortNumber)
                    .addComponent(jTxtPortNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblScheduledResponsesFile)
                    .addComponent(jTxtResponsesFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnResponseFileChoser))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblLogFile)
                    .addComponent(jTxtLogFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnLogFileChoser))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnStart)
                    .addComponent(jBtnStop))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblStatus)
                    .addComponent(jLblStatusInfo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnStopActionPerformed
        if(!server.isRunning()){
            JOptionPane.showMessageDialog(this, SERVER_ALREADY_STOPPED,ERROR_MESSAGE_TITLE,JOptionPane.ERROR_MESSAGE);
        }else{
            server.stop();
            jLblStatusInfo.setForeground(COLOR_STOPPED);
            jLblStatusInfo.setText(STATUS_STOPPED);
        }
                
    }//GEN-LAST:event_jBtnStopActionPerformed
 
    // select responseFile, checks choice and, if ok, sets response file textbox and currentDirectory variable
    private void jBtnResponseFileChoserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnResponseFileChoserActionPerformed
        fileChooser= new JFileChooser();
        fileChooser.setCurrentDirectory(currentDirectory);
        if(fileChooser.showOpenDialog(this)!=JFileChooser.APPROVE_OPTION) return;
        responseFile=fileChooser.getSelectedFile();
        if(!responseFile.canRead()||!responseFile.isFile()) JOptionPane.showMessageDialog(this,BAD_FILE,ERROR_MESSAGE_TITLE,JOptionPane.ERROR_MESSAGE);
        else {
            this.jTxtResponsesFile.setText(responseFile.getAbsolutePath());
            currentDirectory=fileChooser.getCurrentDirectory();
        }
    }//GEN-LAST:event_jBtnResponseFileChoserActionPerformed
    
    // select log file, checks choice and, if ok, sets log file textbox and currentDirectory variable
    private void jBtnLogFileChoserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLogFileChoserActionPerformed
        fileChooser= new JFileChooser();
        fileChooser.setCurrentDirectory(currentDirectory);

        if(fileChooser.showSaveDialog(this)!=JFileChooser.APPROVE_OPTION) return;
        logFile=fileChooser.getSelectedFile();
        if(!logFile.canWrite() && (logFile.exists() || !fileChooser.getCurrentDirectory().canWrite())) JOptionPane.showMessageDialog(this,BAD_FILE,ERROR_MESSAGE_TITLE,JOptionPane.ERROR_MESSAGE); 
        else {
            this.jTxtLogFile.setText(logFile.getAbsolutePath());
            currentDirectory=fileChooser.getCurrentDirectory();
        }
    }//GEN-LAST:event_jBtnLogFileChoserActionPerformed

    private void jTxtPortNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtPortNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtPortNumberActionPerformed

    
    // Checks parameters and, if they are ok, throw mock server and updates interface labels
    private void jBtnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnStartActionPerformed
        try{
            if(!server.isRunning()){
                if(!this.jTxtPortNumber.getText().trim().isEmpty()&&!this.jTxtResponsesFile.getText().trim().isEmpty()&&!this.jTxtResponsesFile.getText().trim().isEmpty()){
                   server.initialize(Integer.parseInt(this.jTxtPortNumber.getText()), this.jTxtResponsesFile.getText(),this.jTxtLogFile.getText());
                   server.run();
                   jLblStatusInfo.setForeground(COLOR_RUNNING);
                   jLblStatusInfo.setText(STATUS_RUNNING);
                } else JOptionPane.showMessageDialog(this, MISSING_DATA,ERROR_MESSAGE_TITLE,JOptionPane.ERROR_MESSAGE);
            } else JOptionPane.showMessageDialog(this, SERVER_ALREADY_RUNNING,ERROR_MESSAGE_TITLE,JOptionPane.ERROR_MESSAGE);
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, INPUT_OUTPUT_ERROR,ERROR_MESSAGE_TITLE,JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_jBtnStartActionPerformed

    // checks port number syntactical correctness
    private void jTxtPortNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtPortNumberFocusLost
        boolean badNumber=false;
        
        String portNumber=jTxtPortNumber.getText().trim();
        if(portNumber.isEmpty())  return;
        try{
           int port=Integer.parseInt(portNumber);
           badNumber=(port<0);
        }catch(NumberFormatException e){
            badNumber=true;
        }
        if(badNumber){
            JOptionPane.showMessageDialog(this,BAD_PORT_NUMBER,ERROR_MESSAGE_TITLE,JOptionPane.ERROR_MESSAGE);
            this.jTxtPortNumber.setText("");
        }
    }//GEN-LAST:event_jTxtPortNumberFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MockSocketsServerMainSwing().setVisible(true);
            }
        });
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnLogFileChoser;
    private javax.swing.JButton jBtnResponseFileChoser;
    private javax.swing.JButton jBtnStart;
    private javax.swing.JButton jBtnStop;
    private javax.swing.JLabel jLblLogFile;
    private javax.swing.JLabel jLblMainTitle;
    private javax.swing.JLabel jLblPortNumber;
    private javax.swing.JLabel jLblScheduledResponsesFile;
    private javax.swing.JLabel jLblStatus;
    private javax.swing.JLabel jLblStatusInfo;
    private javax.swing.JTextField jTxtLogFile;
    private javax.swing.JTextField jTxtPortNumber;
    private javax.swing.JTextField jTxtResponsesFile;
    // End of variables declaration//GEN-END:variables

}
